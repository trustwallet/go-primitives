diff --git a/coin/coins.go b/coin/coins.go
index 352263f..4d206df 100644
--- a/coin/coins.go
+++ b/coin/coins.go
@@ -1,6 +1,6 @@
 // Code generated by go generate; DO NOT EDIT.
 // This file was generated by robots at
-// 2023-07-31 14:07:33.308606 &#43;0400 &#43;04 m=&#43;0.002566460
+// 2023-10-31 13:51:52.900892 &#43;0800 WITA m=&#43;0.002710626
 // using data from coins.yml
 package coin
 
@@ -144,6 +144,17 @@ const (
 	CFXEVM          = 1030
 	ACALA           = 787
 	ACALAEVM        = 10000787
+	BASE            = 8453
+	AKASH           = 17000118
+	AGORIC          = 564
+	AXELAR          = 50000118
+	JUNO            = 30000118
+	SEI             = 19000118
+	NEON            = 245022934
+	OPBNB           = 204
+	LINEA           = 59144
+	GBNB            = 5600
+	MANTLE          = 5000
 )
 
 var Coins = map[uint]Coin{
@@ -154,7 +165,7 @@ var Coins = map[uint]Coin{
 		Name:             "Ethereum",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	CLASSIC: {
@@ -164,7 +175,7 @@ var Coins = map[uint]Coin{
 		Name:             "Ethereum Classic",
 		Decimals:         18,
 		BlockTime:        30000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	ICON: {
@@ -184,7 +195,7 @@ var Coins = map[uint]Coin{
 		Name:             "Cosmos",
 		Decimals:         6,
 		BlockTime:        5000,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	RIPPLE: {
@@ -214,7 +225,7 @@ var Coins = map[uint]Coin{
 		Name:             "Poa",
 		Decimals:         18,
 		BlockTime:        5000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	TRON: {
@@ -264,8 +275,8 @@ var Coins = map[uint]Coin{
 		Name:             "IoTeX Network Mainnet",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
-		Blockchain:       "IoTeX Network Mainnet",
+		MinConfirmations: 12,
+		Blockchain:       "Ethereum",
 	},
 	ZILLIQA: {
 		ID:               313,
@@ -304,7 +315,7 @@ var Coins = map[uint]Coin{
 		Name:             "Kava",
 		Decimals:         6,
 		BlockTime:        5000,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	THETA: {
@@ -344,7 +355,7 @@ var Coins = map[uint]Coin{
 		Name:             "Callisto",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	TOMOCHAIN: {
@@ -354,7 +365,7 @@ var Coins = map[uint]Coin{
 		Name:             "TOMO",
 		Decimals:         18,
 		BlockTime:        4000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	THUNDERTOKEN: {
@@ -364,7 +375,7 @@ var Coins = map[uint]Coin{
 		Name:             "ThunderCore",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	ONTOLOGY: {
@@ -414,7 +425,7 @@ var Coins = map[uint]Coin{
 		Name:             "GoChain GO",
 		Decimals:         18,
 		BlockTime:        20000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	WANCHAIN: {
@@ -424,7 +435,7 @@ var Coins = map[uint]Coin{
 		Name:             "Wanchain",
 		Decimals:         18,
 		BlockTime:        30000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	WAVES: {
@@ -664,7 +675,7 @@ var Coins = map[uint]Coin{
 		Name:             "Smart Chain",
 		Decimals:         18,
 		BlockTime:        3000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	FILECOIN: {
@@ -720,11 +731,11 @@ var Coins = map[uint]Coin{
 	TERRA: {
 		ID:               330,
 		Handle:           "terra",
-		Symbol:           "LUNA",
-		Name:             "Terra",
+		Symbol:           "LUNC",
+		Name:             "Terra Classic",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	BAND: {
@@ -774,7 +785,7 @@ var Coins = map[uint]Coin{
 		Name:             "Polygon",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	THORCHAIN: {
@@ -794,7 +805,7 @@ var Coins = map[uint]Coin{
 		Name:             "Optimism Ethereum",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	XDAI: {
@@ -804,7 +815,7 @@ var Coins = map[uint]Coin{
 		Name:             "xDai",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	AVALANCHEC: {
@@ -814,7 +825,7 @@ var Coins = map[uint]Coin{
 		Name:             "Avalanche C-Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	HECO: {
@@ -824,7 +835,7 @@ var Coins = map[uint]Coin{
 		Name:             "Huobi ECO Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	FANTOM: {
@@ -834,7 +845,7 @@ var Coins = map[uint]Coin{
 		Name:             "Fantom",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	ARBITRUM: {
@@ -844,7 +855,7 @@ var Coins = map[uint]Coin{
 		Name:             "Arbitrum",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	CELO: {
@@ -854,7 +865,7 @@ var Coins = map[uint]Coin{
 		Name:             "Celo",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	RONIN: {
@@ -864,7 +875,7 @@ var Coins = map[uint]Coin{
 		Name:             "Ronin",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	OSMOSIS: {
@@ -874,7 +885,7 @@ var Coins = map[uint]Coin{
 		Name:             "Osmosis",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	CRONOS: {
@@ -884,7 +895,7 @@ var Coins = map[uint]Coin{
 		Name:             "Cronos",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	KCC: {
@@ -894,7 +905,7 @@ var Coins = map[uint]Coin{
 		Name:             "KuCoin Community Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	AURORA: {
@@ -904,7 +915,7 @@ var Coins = map[uint]Coin{
 		Name:             "Aurora",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	KAVAEVM: {
@@ -914,7 +925,7 @@ var Coins = map[uint]Coin{
 		Name:             "KavaEvm",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Ethereum",
 	},
 	METER: {
@@ -924,7 +935,7 @@ var Coins = map[uint]Coin{
 		Name:             "Meter",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	EVMOS: {
@@ -934,7 +945,7 @@ var Coins = map[uint]Coin{
 		Name:             "Evmos",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	NATIVEEVMOS: {
@@ -944,7 +955,7 @@ var Coins = map[uint]Coin{
 		Name:             "NativeEvmos",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	OKC: {
@@ -954,7 +965,7 @@ var Coins = map[uint]Coin{
 		Name:             "OKX Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Ethereum",
 	},
 	CRYPTOORG: {
@@ -964,7 +975,7 @@ var Coins = map[uint]Coin{
 		Name:             "CryptoOrg",
 		Decimals:         8,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	APTOS: {
@@ -984,7 +995,7 @@ var Coins = map[uint]Coin{
 		Name:             "Moonbeam",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Ethereum",
 	},
 	KLAYTN: {
@@ -994,7 +1005,7 @@ var Coins = map[uint]Coin{
 		Name:             "Klaytn",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	METIS: {
@@ -1004,7 +1015,7 @@ var Coins = map[uint]Coin{
 		Name:             "Metis",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	MOONRIVER: {
@@ -1014,7 +1025,7 @@ var Coins = map[uint]Coin{
 		Name:             "Moonriver",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 2,
 		Blockchain:       "Ethereum",
 	},
 	BOBA: {
@@ -1024,7 +1035,7 @@ var Coins = map[uint]Coin{
 		Name:             "Boba",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 1,
 		Blockchain:       "Ethereum",
 	},
 	TON: {
@@ -1044,7 +1055,7 @@ var Coins = map[uint]Coin{
 		Name:             "Polygon zkEVM",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	ZKSYNC: {
@@ -1054,7 +1065,7 @@ var Coins = map[uint]Coin{
 		Name:             "Zksync",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	SUI: {
@@ -1074,7 +1085,7 @@ var Coins = map[uint]Coin{
 		Name:             "Stride",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	NEUTRON: {
@@ -1084,7 +1095,7 @@ var Coins = map[uint]Coin{
 		Name:             "Neutron",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 10,
 		Blockchain:       "Cosmos",
 	},
 	STARGAZE: {
@@ -1094,7 +1105,7 @@ var Coins = map[uint]Coin{
 		Name:             "Stargaze",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	NATIVEINJECTIVE: {
@@ -1104,7 +1115,7 @@ var Coins = map[uint]Coin{
 		Name:             "NativeInjective",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 30,
 		Blockchain:       "Cosmos",
 	},
 	CFXEVM: {
@@ -1114,7 +1125,7 @@ var Coins = map[uint]Coin{
 		Name:             "Conflux eSpace",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	ACALA: {
@@ -1134,6 +1145,116 @@ var Coins = map[uint]Coin{
 		Name:             "Acala EVM",
 		Decimals:         18,
 		BlockTime:        0,
+		MinConfirmations: 2,
+		Blockchain:       "Ethereum",
+	},
+	BASE: {
+		ID:               8453,
+		Handle:           "base",
+		Symbol:           "ETH",
+		Name:             "Base",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 12,
+		Blockchain:       "Ethereum",
+	},
+	AKASH: {
+		ID:               17000118,
+		Handle:           "akash",
+		Symbol:           "AKT",
+		Name:             "Akash",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	AGORIC: {
+		ID:               564,
+		Handle:           "agoric",
+		Symbol:           "BLD",
+		Name:             "Agoric",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	AXELAR: {
+		ID:               50000118,
+		Handle:           "axelar",
+		Symbol:           "AXL",
+		Name:             "Axelar",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	JUNO: {
+		ID:               30000118,
+		Handle:           "juno",
+		Symbol:           "JUNO",
+		Name:             "Juno",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	SEI: {
+		ID:               19000118,
+		Handle:           "sei",
+		Symbol:           "SEI",
+		Name:             "Sei",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 0,
+		Blockchain:       "Cosmos",
+	},
+	NEON: {
+		ID:               245022934,
+		Handle:           "neon",
+		Symbol:           "NEON",
+		Name:             "Neon",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 1,
+		Blockchain:       "Ethereum",
+	},
+	OPBNB: {
+		ID:               204,
+		Handle:           "opbnb",
+		Symbol:           "BNB",
+		Name:             "OpBNB",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 24,
+		Blockchain:       "Ethereum",
+	},
+	LINEA: {
+		ID:               59144,
+		Handle:           "linea",
+		Symbol:           "ETH",
+		Name:             "Linea",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Ethereum",
+	},
+	GBNB: {
+		ID:               5600,
+		Handle:           "gbnb",
+		Symbol:           "gBNB",
+		Name:             "BNB Greenfield",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 0,
+		Blockchain:       "Greenfield",
+	},
+	MANTLE: {
+		ID:               5000,
+		Handle:           "mantle",
+		Symbol:           "MNT",
+		Name:             "Mantle",
+		Decimals:         18,
+		BlockTime:        0,
 		MinConfirmations: 0,
 		Blockchain:       "Ethereum",
 	},
@@ -1147,7 +1268,7 @@ var Chains = map[string]Coin{
 		Name:             "Ethereum",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Classic().Handle: {
@@ -1157,7 +1278,7 @@ var Chains = map[string]Coin{
 		Name:             "Ethereum Classic",
 		Decimals:         18,
 		BlockTime:        30000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Icon().Handle: {
@@ -1177,7 +1298,7 @@ var Chains = map[string]Coin{
 		Name:             "Cosmos",
 		Decimals:         6,
 		BlockTime:        5000,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Ripple().Handle: {
@@ -1207,7 +1328,7 @@ var Chains = map[string]Coin{
 		Name:             "Poa",
 		Decimals:         18,
 		BlockTime:        5000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Tron().Handle: {
@@ -1257,8 +1378,8 @@ var Chains = map[string]Coin{
 		Name:             "IoTeX Network Mainnet",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
-		Blockchain:       "IoTeX Network Mainnet",
+		MinConfirmations: 12,
+		Blockchain:       "Ethereum",
 	},
 	Zilliqa().Handle: {
 		ID:               313,
@@ -1297,7 +1418,7 @@ var Chains = map[string]Coin{
 		Name:             "Kava",
 		Decimals:         6,
 		BlockTime:        5000,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Theta().Handle: {
@@ -1337,7 +1458,7 @@ var Chains = map[string]Coin{
 		Name:             "Callisto",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Tomochain().Handle: {
@@ -1347,7 +1468,7 @@ var Chains = map[string]Coin{
 		Name:             "TOMO",
 		Decimals:         18,
 		BlockTime:        4000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Thundertoken().Handle: {
@@ -1357,7 +1478,7 @@ var Chains = map[string]Coin{
 		Name:             "ThunderCore",
 		Decimals:         18,
 		BlockTime:        10000,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Ontology().Handle: {
@@ -1407,7 +1528,7 @@ var Chains = map[string]Coin{
 		Name:             "GoChain GO",
 		Decimals:         18,
 		BlockTime:        20000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Wanchain().Handle: {
@@ -1417,7 +1538,7 @@ var Chains = map[string]Coin{
 		Name:             "Wanchain",
 		Decimals:         18,
 		BlockTime:        30000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Waves().Handle: {
@@ -1657,7 +1778,7 @@ var Chains = map[string]Coin{
 		Name:             "Smart Chain",
 		Decimals:         18,
 		BlockTime:        3000,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Filecoin().Handle: {
@@ -1713,11 +1834,11 @@ var Chains = map[string]Coin{
 	Terra().Handle: {
 		ID:               330,
 		Handle:           "terra",
-		Symbol:           "LUNA",
-		Name:             "Terra",
+		Symbol:           "LUNC",
+		Name:             "Terra Classic",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Band().Handle: {
@@ -1767,7 +1888,7 @@ var Chains = map[string]Coin{
 		Name:             "Polygon",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Thorchain().Handle: {
@@ -1787,7 +1908,7 @@ var Chains = map[string]Coin{
 		Name:             "Optimism Ethereum",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Xdai().Handle: {
@@ -1797,7 +1918,7 @@ var Chains = map[string]Coin{
 		Name:             "xDai",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Avalanchec().Handle: {
@@ -1807,7 +1928,7 @@ var Chains = map[string]Coin{
 		Name:             "Avalanche C-Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Heco().Handle: {
@@ -1817,7 +1938,7 @@ var Chains = map[string]Coin{
 		Name:             "Huobi ECO Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Fantom().Handle: {
@@ -1827,7 +1948,7 @@ var Chains = map[string]Coin{
 		Name:             "Fantom",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Arbitrum().Handle: {
@@ -1837,7 +1958,7 @@ var Chains = map[string]Coin{
 		Name:             "Arbitrum",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Celo().Handle: {
@@ -1847,7 +1968,7 @@ var Chains = map[string]Coin{
 		Name:             "Celo",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Ronin().Handle: {
@@ -1857,7 +1978,7 @@ var Chains = map[string]Coin{
 		Name:             "Ronin",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Osmosis().Handle: {
@@ -1867,7 +1988,7 @@ var Chains = map[string]Coin{
 		Name:             "Osmosis",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Cronos().Handle: {
@@ -1877,7 +1998,7 @@ var Chains = map[string]Coin{
 		Name:             "Cronos",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Kcc().Handle: {
@@ -1887,7 +2008,7 @@ var Chains = map[string]Coin{
 		Name:             "KuCoin Community Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Aurora().Handle: {
@@ -1897,7 +2018,7 @@ var Chains = map[string]Coin{
 		Name:             "Aurora",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Kavaevm().Handle: {
@@ -1907,7 +2028,7 @@ var Chains = map[string]Coin{
 		Name:             "KavaEvm",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Ethereum",
 	},
 	Meter().Handle: {
@@ -1917,7 +2038,7 @@ var Chains = map[string]Coin{
 		Name:             "Meter",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Evmos().Handle: {
@@ -1927,7 +2048,7 @@ var Chains = map[string]Coin{
 		Name:             "Evmos",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 12,
 		Blockchain:       "Ethereum",
 	},
 	Nativeevmos().Handle: {
@@ -1937,7 +2058,7 @@ var Chains = map[string]Coin{
 		Name:             "NativeEvmos",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Okc().Handle: {
@@ -1947,7 +2068,7 @@ var Chains = map[string]Coin{
 		Name:             "OKX Chain",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Ethereum",
 	},
 	Cryptoorg().Handle: {
@@ -1957,7 +2078,7 @@ var Chains = map[string]Coin{
 		Name:             "CryptoOrg",
 		Decimals:         8,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Aptos().Handle: {
@@ -1977,7 +2098,7 @@ var Chains = map[string]Coin{
 		Name:             "Moonbeam",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Ethereum",
 	},
 	Klaytn().Handle: {
@@ -1987,7 +2108,7 @@ var Chains = map[string]Coin{
 		Name:             "Klaytn",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Metis().Handle: {
@@ -1997,7 +2118,7 @@ var Chains = map[string]Coin{
 		Name:             "Metis",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Moonriver().Handle: {
@@ -2007,7 +2128,7 @@ var Chains = map[string]Coin{
 		Name:             "Moonriver",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 2,
 		Blockchain:       "Ethereum",
 	},
 	Boba().Handle: {
@@ -2017,7 +2138,7 @@ var Chains = map[string]Coin{
 		Name:             "Boba",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 1,
 		Blockchain:       "Ethereum",
 	},
 	Ton().Handle: {
@@ -2037,7 +2158,7 @@ var Chains = map[string]Coin{
 		Name:             "Polygon zkEVM",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Zksync().Handle: {
@@ -2047,7 +2168,7 @@ var Chains = map[string]Coin{
 		Name:             "Zksync",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Sui().Handle: {
@@ -2067,7 +2188,7 @@ var Chains = map[string]Coin{
 		Name:             "Stride",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Neutron().Handle: {
@@ -2077,7 +2198,7 @@ var Chains = map[string]Coin{
 		Name:             "Neutron",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 10,
 		Blockchain:       "Cosmos",
 	},
 	Stargaze().Handle: {
@@ -2087,7 +2208,7 @@ var Chains = map[string]Coin{
 		Name:             "Stargaze",
 		Decimals:         6,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 7,
 		Blockchain:       "Cosmos",
 	},
 	Nativeinjective().Handle: {
@@ -2097,7 +2218,7 @@ var Chains = map[string]Coin{
 		Name:             "NativeInjective",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 30,
 		Blockchain:       "Cosmos",
 	},
 	Cfxevm().Handle: {
@@ -2107,7 +2228,7 @@ var Chains = map[string]Coin{
 		Name:             "Conflux eSpace",
 		Decimals:         18,
 		BlockTime:        0,
-		MinConfirmations: 0,
+		MinConfirmations: 36,
 		Blockchain:       "Ethereum",
 	},
 	Acala().Handle: {
@@ -2127,6 +2248,116 @@ var Chains = map[string]Coin{
 		Name:             "Acala EVM",
 		Decimals:         18,
 		BlockTime:        0,
+		MinConfirmations: 2,
+		Blockchain:       "Ethereum",
+	},
+	Base().Handle: {
+		ID:               8453,
+		Handle:           "base",
+		Symbol:           "ETH",
+		Name:             "Base",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 12,
+		Blockchain:       "Ethereum",
+	},
+	Akash().Handle: {
+		ID:               17000118,
+		Handle:           "akash",
+		Symbol:           "AKT",
+		Name:             "Akash",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	Agoric().Handle: {
+		ID:               564,
+		Handle:           "agoric",
+		Symbol:           "BLD",
+		Name:             "Agoric",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	Axelar().Handle: {
+		ID:               50000118,
+		Handle:           "axelar",
+		Symbol:           "AXL",
+		Name:             "Axelar",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	Juno().Handle: {
+		ID:               30000118,
+		Handle:           "juno",
+		Symbol:           "JUNO",
+		Name:             "Juno",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Cosmos",
+	},
+	Sei().Handle: {
+		ID:               19000118,
+		Handle:           "sei",
+		Symbol:           "SEI",
+		Name:             "Sei",
+		Decimals:         6,
+		BlockTime:        0,
+		MinConfirmations: 0,
+		Blockchain:       "Cosmos",
+	},
+	Neon().Handle: {
+		ID:               245022934,
+		Handle:           "neon",
+		Symbol:           "NEON",
+		Name:             "Neon",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 1,
+		Blockchain:       "Ethereum",
+	},
+	Opbnb().Handle: {
+		ID:               204,
+		Handle:           "opbnb",
+		Symbol:           "BNB",
+		Name:             "OpBNB",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 24,
+		Blockchain:       "Ethereum",
+	},
+	Linea().Handle: {
+		ID:               59144,
+		Handle:           "linea",
+		Symbol:           "ETH",
+		Name:             "Linea",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 7,
+		Blockchain:       "Ethereum",
+	},
+	Gbnb().Handle: {
+		ID:               5600,
+		Handle:           "gbnb",
+		Symbol:           "gBNB",
+		Name:             "BNB Greenfield",
+		Decimals:         18,
+		BlockTime:        0,
+		MinConfirmations: 0,
+		Blockchain:       "Greenfield",
+	},
+	Mantle().Handle: {
+		ID:               5000,
+		Handle:           "mantle",
+		Symbol:           "MNT",
+		Name:             "Mantle",
+		Decimals:         18,
+		BlockTime:        0,
 		MinConfirmations: 0,
 		Blockchain:       "Ethereum",
 	},
@@ -2527,3 +2758,47 @@ func Acala() Coin {
 func Acalaevm() Coin {
 	return Coins[ACALAEVM]
 }
+
+func Base() Coin {
+	return Coins[BASE]
+}
+
+func Akash() Coin {
+	return Coins[AKASH]
+}
+
+func Agoric() Coin {
+	return Coins[AGORIC]
+}
+
+func Axelar() Coin {
+	return Coins[AXELAR]
+}
+
+func Juno() Coin {
+	return Coins[JUNO]
+}
+
+func Sei() Coin {
+	return Coins[SEI]
+}
+
+func Neon() Coin {
+	return Coins[NEON]
+}
+
+func Opbnb() Coin {
+	return Coins[OPBNB]
+}
+
+func Linea() Coin {
+	return Coins[LINEA]
+}
+
+func Gbnb() Coin {
+	return Coins[GBNB]
+}
+
+func Mantle() Coin {
+	return Coins[MANTLE]
+}
diff --git a/coin/coins.yml b/coin/coins.yml
index 99813d8..6ee7a7d 100644
--- a/coin/coins.yml
+++ b/coin/coins.yml
@@ -5,6 +5,7 @@
   decimals: 18
   blockTime: 10000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 61
   symbol: ETC
@@ -13,6 +14,7 @@
   decimals: 18
   blockTime: 30000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 74
   symbol: ICX
@@ -29,6 +31,7 @@
   decimals: 6
   blockTime: 5000
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 144
   symbol: XRP
@@ -53,6 +56,7 @@
   decimals: 18
   blockTime: 5000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 195
   symbol: TRX
@@ -92,7 +96,8 @@
   name: IoTeX Network Mainnet
   decimals: 18
   blockTime: 10000
-  blockchain: IoTeX Network Mainnet
+  blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 313
   symbol: ZIL
@@ -126,6 +131,7 @@
   decimals: 6
   blockTime: 5000
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 500
   symbol: THETA
@@ -158,6 +164,7 @@
   decimals: 18
   blockTime: 10000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 889
   symbol: TOMO
@@ -166,6 +173,7 @@
   blockTime: 4000
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 1001
   symbol: TT
@@ -174,6 +182,7 @@
   decimals: 18
   blockTime: 10000
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 1024
   symbol: ONT
@@ -214,6 +223,7 @@
   decimals: 18
   blockTime: 20000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 5718350
   symbol: WAN
@@ -222,6 +232,7 @@
   decimals: 18
   blockTime: 30000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 5741564
   symbol: WAVES
@@ -414,6 +425,7 @@
   decimals: 18
   blockTime: 3000
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 461
   symbol: FIL
@@ -456,11 +468,12 @@
   blockchain: EOS
 
 - id: 330
-  symbol: LUNA
+  symbol: LUNC
   handle: terra
-  name: Terra
+  name: Terra Classic
   decimals: 6
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 494
   symbol: BAND
@@ -497,6 +510,7 @@
   name: Polygon
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 931
   symbol: RUNE
@@ -511,6 +525,7 @@
   name: Optimism Ethereum
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 10000100
   symbol: xDAI
@@ -518,6 +533,7 @@
   name: xDai
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10009000
   symbol: AVAX
@@ -525,6 +541,7 @@
   name: Avalanche C-Chain
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 10000553
   symbol: HT
@@ -532,6 +549,7 @@
   name: Huobi ECO Chain
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10000250
   symbol: FTM
@@ -539,6 +557,7 @@
   name: Fantom
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10042221
   symbol: ARETH
@@ -546,6 +565,7 @@
   name: Arbitrum
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 52752
   symbol: CELO
@@ -553,6 +573,7 @@
   name: Celo
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10002020
   symbol: RON
@@ -560,6 +581,7 @@
   name: Ronin
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10000118
   symbol: OSMO
@@ -567,6 +589,7 @@
   name: Osmosis
   decimals: 6
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 10000025
   symbol: CRO
@@ -574,6 +597,7 @@
   name: Cronos
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10000321
   symbol: KCS
@@ -581,6 +605,7 @@
   name: KuCoin Community Chain
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 1323161554
   symbol: AURORAETH
@@ -588,6 +613,7 @@
   name: Aurora
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 10002222
   symbol: KAVA
@@ -595,6 +621,7 @@
   name: KavaEvm
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 7
 
 - id: 18000
   symbol: MTR
@@ -602,6 +629,7 @@
   name: Meter
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 10009001
   symbol: EVMOS
@@ -609,6 +637,7 @@
   name: Evmos
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 12
 
 - id: 20009001
   symbol: EVMOS
@@ -616,6 +645,7 @@
   name: NativeEvmos
   decimals: 18
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 996
   symbol: OKT
@@ -623,6 +653,7 @@
   name: OKX Chain
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 7
 
 - id: 394
   symbol: CRO
@@ -630,6 +661,7 @@
   name: CryptoOrg
   decimals: 8
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 637
   symbol: APTOS
@@ -644,6 +676,7 @@
   name: Moonbeam
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 7
 
 - id: 10008217
   symbol: KLAY
@@ -651,6 +684,7 @@
   name: Klaytn
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 10001088
   symbol: METIS
@@ -658,6 +692,7 @@
   name: Metis
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 10001285
   symbol: MOVR
@@ -665,6 +700,7 @@
   name: Moonriver
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 2
 
 - id: 10000288
   symbol: BOBAETH
@@ -672,6 +708,7 @@
   name: Boba
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 1
 
 - id: 607
   symbol: TON
@@ -686,6 +723,7 @@
   name: Polygon zkEVM
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 10000324
   symbol: ZKSYNC
@@ -693,6 +731,7 @@
   name: Zksync
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 784
   symbol: SUI
@@ -707,6 +746,7 @@
   name: Stride
   decimals: 6
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 90000118
   symbol: NTRN
@@ -714,6 +754,7 @@
   name: Neutron
   decimals: 6
   blockchain: Cosmos
+  minConfirmations: 10
 
 - id: 20000118
   symbol: STARS
@@ -721,6 +762,7 @@
   name: Stargaze
   decimals: 6
   blockchain: Cosmos
+  minConfirmations: 7
 
 - id: 10000060
   symbol: INJ
@@ -728,6 +770,7 @@
   name: NativeInjective
   decimals: 18
   blockchain: Cosmos
+  minConfirmations: 30
 
 - id: 1030
   symbol: CFX
@@ -735,6 +778,7 @@
   name: Conflux eSpace
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 36
 
 - id: 787
   symbol: ACA
@@ -749,3 +793,89 @@
   name: Acala EVM
   decimals: 18
   blockchain: Ethereum
+  minConfirmations: 2
+
+- id: 8453
+  symbol: ETH
+  handle: base
+  name: Base
+  decimals: 18
+  blockchain: Ethereum
+  minConfirmations: 12
+
+- id: 17000118
+  symbol: AKT
+  handle: akash
+  name: Akash
+  decimals: 6
+  blockchain: Cosmos
+  minConfirmations: 7
+
+- id: 564
+  symbol: BLD
+  handle: agoric
+  name: Agoric
+  decimals: 6
+  blockchain: Cosmos
+  minConfirmations: 7
+
+- id: 50000118
+  symbol: AXL
+  handle: axelar
+  name: Axelar
+  decimals: 6
+  blockchain: Cosmos
+  minConfirmations: 7
+
+- id: 30000118
+  symbol: JUNO
+  handle: juno
+  name: Juno
+  decimals: 6
+  blockchain: Cosmos
+  minConfirmations: 7
+
+- id: 19000118
+  symbol: SEI
+  handle: sei
+  name: Sei
+  decimals: 6
+  blockchain: Cosmos
+
+- id: 245022934
+  symbol: NEON
+  handle: neon
+  name: Neon
+  decimals: 18
+  blockchain: Ethereum
+  minConfirmations: 1
+
+- id: 204
+  symbol: BNB
+  handle: opbnb
+  name: OpBNB
+  decimals: 18
+  blockchain: Ethereum
+  minConfirmations: 24
+
+- id: 59144
+  symbol: ETH
+  handle: linea
+  name: Linea
+  decimals: 18
+  blockchain: Ethereum
+  minConfirmations: 7
+
+- id: 5600
+  symbol: gBNB
+  handle: gbnb
+  name: BNB Greenfield
+  decimals: 18
+  blockchain: Greenfield
+
+- id: 5000
+  symbol: MNT
+  handle: mantle
+  name: Mantle
+  decimals: 18
+  blockchain: Ethereum
diff --git a/coin/gen_test.go b/coin/gen_test.go
index 73d1b4d..fd7a358 100644
--- a/coin/gen_test.go
+++ b/coin/gen_test.go
@@ -92,7 +92,7 @@ func TestEthereum(t *testing.T) {
 	assert.Equal(t, "Ethereum", c.Name)
 	assert.Equal(t, uint(18), c.Decimals)
 	assert.Equal(t, 10000, c.BlockTime)
-	assert.Equal(t, int64(0), c.MinConfirmations)
+	assert.Equal(t, int64(12), c.MinConfirmations)
 }
 
 func TestBinance(t *testing.T) {
@@ -105,7 +105,20 @@ func TestBinance(t *testing.T) {
 	assert.Equal(t, "Smart Chain", c.Name)
 	assert.Equal(t, uint(18), c.Decimals)
 	assert.Equal(t, 3000, c.BlockTime)
-	assert.Equal(t, int64(0), c.MinConfirmations)
+	assert.Equal(t, int64(12), c.MinConfirmations)
+}
+
+func TestCosmos(t *testing.T) {
+
+	c := Cosmos()
+
+	assert.Equal(t, uint(118), c.ID)
+	assert.Equal(t, "cosmos", c.Handle)
+	assert.Equal(t, "ATOM", c.Symbol)
+	assert.Equal(t, "Cosmos", c.Name)
+	assert.Equal(t, uint(6), c.Decimals)
+	assert.Equal(t, 5000, c.BlockTime)
+	assert.Equal(t, int64(7), c.MinConfirmations)
 }
 
 func TestPublicVariables(t *testing.T) {
@@ -117,7 +130,7 @@ func TestPublicVariables(t *testing.T) {
 			Name:             "Smart Chain",
 			Decimals:         18,
 			BlockTime:        3000,
-			MinConfirmations: 0,
+			MinConfirmations: 12,
 			Blockchain:       "Ethereum",
 		},
 		{
@@ -127,7 +140,7 @@ func TestPublicVariables(t *testing.T) {
 			Name:             "Ethereum",
 			Decimals:         18,
 			BlockTime:        10000,
-			MinConfirmations: 0,
+			MinConfirmations: 12,
 			Blockchain:       "Ethereum",
 		},
 	}
diff --git a/coin/models.go b/coin/models.go
index 9226b71..f55e46d 100644
--- a/coin/models.go
+++ b/coin/models.go
@@ -151,6 +151,12 @@ func GetCoinExploreURL(c Coin, tokenID, tokenType string) (string, error) {
 		return fmt.Sprintf("https://acala.subscan.io/system_token_detail?unique_id=%s", tokenID), nil
 	case ACALAEVM:
 		return fmt.Sprintf("https://blockscout.acala.network/token/%s", tokenID), nil
+	case BASE:
+		return fmt.Sprintf("https://basescan.org/token/%s", tokenID), nil
+	case CARDANO:
+		return fmt.Sprintf("https://cexplorer.io/asset/%s", tokenID), nil
+	case NEON:
+		return fmt.Sprintf("https://neonscan.org/token/%s", tokenID), nil
 	}
 
 	return "", errors.New("no explorer for coin: " + c.Handle)
diff --git a/coin/models_test.go b/coin/models_test.go
index cfd90e4..b5a5677 100644
--- a/coin/models_test.go
+++ b/coin/models_test.go
@@ -344,6 +344,26 @@ func TestGetCoinExploreURL(t *testing.T) {
 			want:    "https://acala.subscan.io/custom_token?customTokenId=test",
 			wantErr: false,
 		},
+		{
+			name: "Test BASE20 token",
+			args: args{
+				addr:      "0x48bcf9455ba97cc439a2efbcfdf8f1afe692139b",
+				tokenType: "BASE20",
+				chain:     Base(),
+			},
+			want:    "https://basescan.org/token/0x48bcf9455ba97cc439a2efbcfdf8f1afe692139b",
+			wantErr: false,
+		},
+		{
+			name: "Test NEON token",
+			args: args{
+				addr:      "0x5f38248f339bf4e84a2caf4e4c0552862dc9f82a",
+				tokenType: "NEON",
+				chain:     Neon(),
+			},
+			want:    "https://neonscan.org/token/0x5f38248f339bf4e84a2caf4e4c0552862dc9f82a",
+			wantErr: false,
+		},
 	}
 	for _, tt := range tests {
 		t.Run(tt.name, func(t *testing.T) {
@@ -394,6 +414,12 @@ var evmCoinsTestSet = map[uint]struct{}{
 	ZKSYNC:       {},
 	CFXEVM:       {},
 	ACALAEVM:     {},
+	BASE:         {},
+	NEON:         {},
+	IOTEXEVM:     {},
+	OPBNB:        {},
+	LINEA:        {},
+	MANTLE:       {},
 }
 
 // TestEvmCoinsList This test will automatically fail when new EVM chain is added to coins.yml
diff --git a/types/chain.go b/types/chain.go
index f189b37..43b3a61 100644
--- a/types/chain.go
+++ b/types/chain.go
@@ -85,7 +85,7 @@ func GetChainFromAssetType(assetType string) (coin.Coin, error) {
 		return coin.Aurora(), nil
 	case ALGORAND:
 		return coin.Algorand(), nil
-	case KAVAERC20:
+	case KAVAEVM:
 		return coin.Kavaevm(), nil
 	case METER:
 		return coin.Meter(), nil
@@ -119,12 +119,44 @@ func GetChainFromAssetType(assetType string) (coin.Coin, error) {
 		return coin.Neutron(), nil
 	case FA2:
 		return coin.Tezos(), nil
-	case CFXEVM:
+	case CONFLUX:
 		return coin.Cfxevm(), nil
 	case ACA:
 		return coin.Acala(), nil
 	case ACALAEVM:
 		return coin.Acalaevm(), nil
+	case BASE:
+		return coin.Base(), nil
+	case AKASH:
+		return coin.Akash(), nil
+	case AGORIC:
+		return coin.Agoric(), nil
+	case AXELAR:
+		return coin.Axelar(), nil
+	case JUNO:
+		return coin.Juno(), nil
+	case SEI:
+		return coin.Sei(), nil
+	case CARDANO:
+		return coin.Cardano(), nil
+	case NEON:
+		return coin.Neon(), nil
+	case OSMOSIS:
+		return coin.Osmosis(), nil
+	case NATIVEINJECTIVE:
+		return coin.Nativeinjective(), nil
+	case NATIVEEVMOS:
+		return coin.Nativeevmos(), nil
+	case CRYPTOORG:
+		return coin.Cryptoorg(), nil
+	case COSMOS:
+		return coin.Cosmos(), nil
+	case OPBNB:
+		return coin.Opbnb(), nil
+	case LINEA:
+		return coin.Linea(), nil
+	case STARGAZE:
+		return coin.Stargaze(), nil
 	}
 
 	return coin.Coin{}, errors.New("unknown asset type: " + assetType)
diff --git a/types/chain_test.go b/types/chain_test.go
index dfe1e06..5c0048e 100644
--- a/types/chain_test.go
+++ b/types/chain_test.go
@@ -85,7 +85,7 @@ func TestGetChainFromAssetType(t *testing.T) {
 		{
 			name: "Test Conflux eSpace",
 			args: args{
-				type_: "CFXEVM",
+				type_: "CONFLUX",
 			},
 			want:    coin.Cfxevm(),
 			wantErr: false,
diff --git a/types/token.go b/types/token.go
index a6a242c..76a1546 100644
--- a/types/token.go
+++ b/types/token.go
@@ -29,73 +29,90 @@ type (
 )
 
 const (
-	Coin         TokenType = "coin"
-	Gas          TokenType = "gas"
-	BRC20        TokenType = "BRC20"
-	ERC20        TokenType = "ERC20"
-	ERC721       TokenType = "ERC721"
-	ERC1155      TokenType = "ERC1155"
-	BEP2         TokenType = "BEP2"
-	BEP8         TokenType = "BEP8"
-	BEP20        TokenType = "BEP20"
-	TRC10        TokenType = "TRC10"
-	ETC20        TokenType = "ETC20"
-	POA20        TokenType = "POA20"
-	TRC20        TokenType = "TRC20"
-	TRC21        TokenType = "TRC21"
-	CLO20        TokenType = "CLO20"
-	GO20         TokenType = "GO20"
-	WAN20        TokenType = "WAN20"
-	TT20         TokenType = "TT20"
-	KAVA         TokenType = "KAVA"
-	SPL          TokenType = "SPL"
-	POLYGON      TokenType = "POLYGON"
-	OPTIMISM     TokenType = "OPTIMISM"
-	XDAI         TokenType = "XDAI"
-	AVALANCHE    TokenType = "AVALANCHE"
-	FANTOM       TokenType = "FANTOM"
-	HRC20        TokenType = "HRC20"
-	ARBITRUM     TokenType = "ARBITRUM"
-	TERRA        TokenType = "TERRA"
-	RONIN        TokenType = "RONIN"
-	EOS          TokenType = "EOS"
-	NEP5         TokenType = "NEP5"
-	NRC20        TokenType = "NRC20"
-	VET          TokenType = "VET"
-	ONTOLOGY     TokenType = "ONTOLOGY"
-	THETA        TokenType = "THETA"
-	TOMO         TokenType = "TOMO"
-	WAVES        TokenType = "WAVES"
-	POA          TokenType = "POA"
-	CELO         TokenType = "CELO"
-	ESDT         TokenType = "ESDT"
-	CW20         TokenType = "CW20"
-	OASIS        TokenType = "OASIS"
-	CRC20        TokenType = "CRC20"
-	STELLAR      TokenType = "STELLAR"
-	KRC20        TokenType = "KRC20"
-	AURORA       TokenType = "AURORA"
-	ALGORAND     TokenType = "ALGORAND"
-	KAVAERC20    TokenType = "KAVAERC20"
-	METER        TokenType = "METER"
-	EVMOS_ERC20  TokenType = "EVMOS_ERC20"
-	KIP20        TokenType = "KIP20"
-	APTOS        TokenType = "APTOS"
-	MOONBEAM     TokenType = "MOONBEAM"
-	KLAYTN       TokenType = "KLAYTN"
-	METIS        TokenType = "METIS"
-	MOONRIVER    TokenType = "MOONRIVER"
-	BOBA         TokenType = "BOBA"
-	TON          TokenType = "TON"
-	POLYGONZKEVM TokenType = "ZKEVM"
-	ZKSYNC       TokenType = "ZKSYNC"
-	SUI          TokenType = "SUI"
-	STRIDE       TokenType = "STRIDE"
-	NEUTRON      TokenType = "NEUTRON"
-	FA2          TokenType = "FA2"
-	CFXEVM       TokenType = "CFXEVM"
-	ACA          TokenType = "ACA"
-	ACALAEVM     TokenType = "ACALAEVM"
+	Coin            TokenType = "coin"
+	Gas             TokenType = "gas"
+	BRC20           TokenType = "BRC20"
+	ERC20           TokenType = "ERC20"
+	ERC721          TokenType = "ERC721"
+	ERC1155         TokenType = "ERC1155"
+	BEP2            TokenType = "BEP2"
+	BEP8            TokenType = "BEP8"
+	BEP20           TokenType = "BEP20"
+	TRC10           TokenType = "TRC10"
+	ETC20           TokenType = "ETC20"
+	POA20           TokenType = "POA20"
+	TRC20           TokenType = "TRC20"
+	TRC21           TokenType = "TRC21"
+	CLO20           TokenType = "CLO20"
+	GO20            TokenType = "GO20"
+	WAN20           TokenType = "WAN20"
+	TT20            TokenType = "TT20"
+	KAVA            TokenType = "KAVA"
+	COSMOS          TokenType = "COSMOS"
+	CRYPTOORG       TokenType = "CRYPTOORG"
+	NATIVEEVMOS     TokenType = "NATIVEEVMOS"
+	NATIVEINJECTIVE TokenType = "NATIVEINJECTIVE"
+	STARGAZE        TokenType = "STARGAZE"
+	NEUTRON         TokenType = "NEUTRON"
+	OSMOSIS         TokenType = "OSMOSIS"
+	SPL             TokenType = "SPL"
+	POLYGON         TokenType = "POLYGON"
+	OPTIMISM        TokenType = "OPTIMISM"
+	XDAI            TokenType = "XDAI"
+	AVALANCHE       TokenType = "AVALANCHE"
+	FANTOM          TokenType = "FANTOM"
+	HRC20           TokenType = "HRC20"
+	ARBITRUM        TokenType = "ARBITRUM"
+	TERRA           TokenType = "TERRA"
+	RONIN           TokenType = "RONIN"
+	EOS             TokenType = "EOS"
+	NEP5            TokenType = "NEP5"
+	NRC20           TokenType = "NRC20"
+	VET             TokenType = "VET"
+	ONTOLOGY        TokenType = "ONTOLOGY"
+	THETA           TokenType = "THETA"
+	TOMO            TokenType = "TOMO"
+	WAVES           TokenType = "WAVES"
+	POA             TokenType = "POA"
+	CELO            TokenType = "CELO"
+	ESDT            TokenType = "ESDT"
+	CW20            TokenType = "CW20"
+	OASIS           TokenType = "OASIS"
+	CRC20           TokenType = "CRC20"
+	STELLAR         TokenType = "STELLAR"
+	KRC20           TokenType = "KRC20"
+	AURORA          TokenType = "AURORA"
+	ALGORAND        TokenType = "ASA"
+	KAVAEVM         TokenType = "KAVAEVM"
+	METER           TokenType = "METER"
+	EVMOS_ERC20     TokenType = "EVMOS_ERC20"
+	KIP20           TokenType = "KIP20"
+	APTOS           TokenType = "APTOS"
+	MOONBEAM        TokenType = "MOONBEAM"
+	KLAYTN          TokenType = "KLAYTN"
+	METIS           TokenType = "METIS"
+	MOONRIVER       TokenType = "MOONRIVER"
+	BOBA            TokenType = "BOBA"
+	TON             TokenType = "TON"
+	POLYGONZKEVM    TokenType = "ZKEVM"
+	ZKSYNC          TokenType = "ZKSYNC"
+	SUI             TokenType = "SUI"
+	STRIDE          TokenType = "STRIDE"
+	FA2             TokenType = "FA2"
+	CONFLUX         TokenType = "CONFLUX"
+	ACA             TokenType = "ACA"
+	ACALAEVM        TokenType = "ACALAEVM"
+	BASE            TokenType = "BASE"
+	AKASH           TokenType = "AKT"
+	AGORIC          TokenType = "BLD"
+	AXELAR          TokenType = "AXL"
+	JUNO            TokenType = "JUNO"
+	SEI             TokenType = "SEI"
+	CARDANO         TokenType = "CARDANO"
+	NEON            TokenType = "NEON"
+	IOTEXEVM        TokenType = "XRC20"
+	OPBNB           TokenType = "OPBNB"
+	LINEA           TokenType = "LINEA"
 )
 
 const (
@@ -111,6 +128,8 @@ const (
 	TokenVersionV10       TokenVersion = 10
 	TokenVersionV11       TokenVersion = 11
 	TokenVersionV12       TokenVersion = 12
+	TokenVersionV13       TokenVersion = 13
+	TokenVersionV14       TokenVersion = 14
 	TokenVersionUndefined TokenVersion = -1
 )
 
@@ -133,7 +152,17 @@ func GetTokenTypes() []TokenType {
 		WAN20,
 		TT20,
 		CW20,
+		COSMOS,
 		KAVA,
+		JUNO,
+		AGORIC,
+		AKASH,
+		AXELAR,
+		CRYPTOORG,
+		NATIVEEVMOS,
+		NATIVEINJECTIVE,
+		OSMOSIS,
+		STARGAZE,
 		SPL,
 		POLYGON,
 		OPTIMISM,
@@ -161,7 +190,7 @@ func GetTokenTypes() []TokenType {
 		KRC20,
 		AURORA,
 		ALGORAND,
-		KAVAERC20,
+		KAVAEVM,
 		METER,
 		EVMOS_ERC20,
 		KIP20,
@@ -177,8 +206,15 @@ func GetTokenTypes() []TokenType {
 		SUI,
 		STRIDE,
 		NEUTRON,
-		CFXEVM,
+		CONFLUX,
 		ACA,
+		BASE,
+		SEI,
+		CARDANO,
+		NEON,
+		OPBNB,
+		LINEA,
+		ACALAEVM,
 	}
 }
 
@@ -234,6 +270,20 @@ func GetTokenType(c uint, tokenID string) (string, bool) {
 		return string(ALGORAND), true
 	case coin.KAVA:
 		return string(KAVA), true
+	case coin.COSMOS:
+		return string(COSMOS), true
+	case coin.CRYPTOORG:
+		return string(CRYPTOORG), true
+	case coin.NATIVEEVMOS:
+		return string(NATIVEEVMOS), true
+	case coin.NATIVEINJECTIVE:
+		return string(NATIVEINJECTIVE), true
+	case coin.STARGAZE:
+		return string(STARGAZE), true
+	case coin.NEUTRON:
+		return string(NEUTRON), true
+	case coin.OSMOSIS:
+		return string(OSMOSIS), true
 	case coin.CELO:
 		return string(CELO), true
 	case coin.ELROND:
@@ -250,12 +300,24 @@ func GetTokenType(c uint, tokenID string) (string, bool) {
 		return string(SUI), true
 	case coin.STRIDE:
 		return string(STRIDE), true
-	case coin.NEUTRON:
-		return string(NEUTRON), true
 	case coin.CFXEVM:
-		return string(CFXEVM), true
+		return string(CONFLUX), true
 	case coin.ACALA:
 		return string(ACA), true
+	case coin.AKASH:
+		return string(AKASH), true
+	case coin.AGORIC:
+		return string(AGORIC), true
+	case coin.AXELAR:
+		return string(AXELAR), true
+	case coin.JUNO:
+		return string(JUNO), true
+	case coin.SEI:
+		return string(SEI), true
+	case coin.CARDANO:
+		return string(CARDANO), true
+	case coin.NEON:
+		return string(NEON), true
 	default:
 		return "", false
 	}
@@ -304,9 +366,12 @@ func GetTokenVersion(tokenType string) (TokenVersion, error) {
 		return TokenVersionV11, nil
 	case TON, POLYGONZKEVM, ZKSYNC, SUI:
 		return TokenVersionV12, nil
-	case BRC20, ERC721, ERC1155, EOS, NEP5, VET, ONTOLOGY, THETA, TOMO, POA, OASIS, ALGORAND,
-		KAVAERC20, METER, EVMOS_ERC20, KIP20, MOONBEAM, KLAYTN, METIS, MOONRIVER, BOBA, STRIDE, NEUTRON, FA2, CFXEVM,
-		ACA:
+	case BASE, AKASH, AGORIC, AXELAR, JUNO, SEI, OPBNB:
+		return TokenVersionV13, nil
+	case KAVAEVM, BOBA, METIS, NEON, LINEA, ACA, ACALAEVM, CONFLUX, IOTEXEVM, KLAYTN, MOONRIVER, MOONBEAM:
+		return TokenVersionV14, nil
+	case BRC20, ERC721, ERC1155, EOS, NEP5, VET, ONTOLOGY, THETA, TOMO, POA, OASIS, ALGORAND, METER, EVMOS_ERC20,
+		KIP20, STRIDE, NEUTRON, FA2, CARDANO, NATIVEINJECTIVE, NATIVEEVMOS, CRYPTOORG, COSMOS, OSMOSIS, STARGAZE:
 		return TokenVersionUndefined, nil
 	default:
 		// This should not happen, as it is guarded by TestGetTokenVersionImplementEverySupportedTokenTypes
@@ -369,7 +434,7 @@ func GetEthereumTokenTypeByIndex(coinIndex uint) (TokenType, error) {
 	case coin.ARBITRUM:
 		tokenType = ARBITRUM
 	case coin.KAVAEVM:
-		tokenType = KAVAERC20
+		tokenType = KAVAEVM
 	case coin.METER:
 		tokenType = METER
 	case coin.EVMOS:
@@ -399,9 +464,19 @@ func GetEthereumTokenTypeByIndex(coinIndex uint) (TokenType, error) {
 	case coin.NEUTRON:
 		tokenType = NEUTRON
 	case coin.CFXEVM:
-		tokenType = CFXEVM
-	case coin.ACALA:
-		tokenType = ACA
+		tokenType = CONFLUX
+	case coin.ACALAEVM:
+		tokenType = ACALAEVM
+	case coin.BASE:
+		tokenType = BASE
+	case coin.NEON:
+		tokenType = NEON
+	case coin.IOTEXEVM:
+		tokenType = IOTEXEVM
+	case coin.OPBNB:
+		tokenType = OPBNB
+	case coin.LINEA:
+		tokenType = LINEA
 	}
 
 	if tokenType == "" {
diff --git a/types/token_test.go b/types/token_test.go
index fb260a1..9b64560 100644
--- a/types/token_test.go
+++ b/types/token_test.go
@@ -153,7 +153,7 @@ func TestGetEthereumTokenTypeByIndex(t *testing.T) {
 		{
 			name: "Conflux eSpace",
 			args: args{coinIndex: coin.CFXEVM},
-			want: CFXEVM,
+			want: CONFLUX,
 		},
 	}
 	for _, tt := range tests {
@@ -344,7 +344,7 @@ func TestGetTokenType(t *testing.T) {
 		{
 			name:     "Conflux eSpace",
 			args:     args{coin.CFXEVM, ""},
-			want:     string(CFXEVM),
+			want:     string(CONFLUX),
 			wantBool: true,
 		},
 		{
@@ -480,31 +480,31 @@ func TestGetTokenVersion(t *testing.T) {
 		{
 			"Moonbeam token version",
 			args{t: string(MOONBEAM)},
-			TokenVersionUndefined,
+			TokenVersionV14,
 			nil,
 		},
 		{
 			"Klaytn token version",
 			args{t: string(KLAYTN)},
-			TokenVersionUndefined,
+			TokenVersionV14,
 			nil,
 		},
 		{
 			"Metis token version",
 			args{t: string(METIS)},
-			TokenVersionUndefined,
+			TokenVersionV14,
 			nil,
 		},
 		{
 			"Moonriver token version",
 			args{t: string(MOONRIVER)},
-			TokenVersionUndefined,
+			TokenVersionV14,
 			nil,
 		},
 		{
 			"Boba token version",
 			args{t: string(BOBA)},
-			TokenVersionUndefined,
+			TokenVersionV14,
 			nil,
 		},
 
@@ -531,15 +531,15 @@ func TestGetTokenVersion(t *testing.T) {
 
 		{
 			"Conflux eSpace token version",
-			args{t: string(CFXEVM)},
-			TokenVersionUndefined,
+			args{t: string(CONFLUX)},
+			TokenVersionV14,
 			nil,
 		},
 
 		{
 			"Acala token version",
 			args{t: string(ACA)},
-			TokenVersionUndefined,
+			TokenVersionV14,
 			nil,
 		},
 	}
diff --git a/types/tx.go b/types/tx.go
index d2166b7..a87e4e1 100644
--- a/types/tx.go
+++ b/types/tx.go
@@ -121,8 +121,9 @@ type (
 	// UTXO transactions consist of a set of inputs and a set of outputs
 	// both represented by TxOutput model
 	TxOutput struct {
-		Address string `json:"address"`
-		Value   Amount `json:"value"`
+		Address string       `json:"address"`
+		Value   Amount       `json:"value"`
+		Asset   coin.AssetID `json:"asset,omitempty"`
 	}
 
 	// Transfer describes the transfer of currency
@@ -303,7 +304,23 @@ func (t *Tx) GetAddresses() []string {
 
 		return append(addresses, t.From, t.To)
 	case TxContractCall:
-		return append(addresses, t.From, t.To)
+		uniqueAddresses := map[string]struct{}{
+			t.From: {},
+			t.To:   {},
+		}
+		for _, input := range t.Inputs {
+			uniqueAddresses[input.Address] = struct{}{}
+		}
+
+		for _, output := range t.Outputs {
+			uniqueAddresses[output.Address] = struct{}{}
+		}
+
+		for address := range uniqueAddresses {
+			addresses = append(addresses, address)
+		}
+
+		return addresses
 	case TxSwap:
 		return append(addresses, t.From, t.To)
 	case TxStakeDelegate, TxStakeRedelegate, TxStakeUndelegate, TxStakeClaimRewards, TxStakeCompound:
diff --git a/types/tx_test.go b/types/tx_test.go
index be46dbb..fac09fe 100644
--- a/types/tx_test.go
+++ b/types/tx_test.go
@@ -180,12 +180,28 @@ func TestTx_GetAddresses(t *testing.T) {
 		{
 			name: "contract_call",
 			tx: Tx{
-				Type:     TxContractCall,
-				From:     "from",
-				To:       "to",
+				Type: TxContractCall,
+				From: "from",
+				To:   "to",
+				Inputs: []TxOutput{
+					{
+						Address: "from1",
+					},
+					{
+						Address: "from",
+					},
+				},
+				Outputs: []TxOutput{
+					{
+						Address: "to",
+					},
+					{
+						Address: "to1",
+					},
+				},
 				Metadata: &ContractCall{},
 			},
-			expected: []string{"from", "to"},
+			expected: []string{"from", "to", "from1", "to1"},
 		},
 		{
 			name: "swap",
diff --git a/types/types.go b/types/types.go
index bd88145..22fcbed 100644
--- a/types/types.go
+++ b/types/types.go
@@ -10,7 +10,7 @@ import (
 type HexNumber big.Int
 
 func (i HexNumber) MarshalJSON() ([]byte, error) {
-	hexNumber := fmt.Sprintf("\"0x%x\"", (*big.Int)(&i).Uint64())
+	hexNumber := fmt.Sprintf("\"0x%x\"", (*big.Int)(&i))
 
 	return []byte(hexNumber), nil
 }
diff --git a/types/types_test.go b/types/types_test.go
new file mode 100644
index 0000000..0ca6c0e
--- /dev/null
+++ b/types/types_test.go
@@ -0,0 +1,66 @@
+package types
+
+import (
+	"encoding/json"
+	"math/big"
+	"testing"
+
+	"github.com/stretchr/testify/assert"
+)
+
+func TestHex_UnmarshalAndMarshalJSON(t *testing.T) {
+	tests := []struct {
+		name    string
+		input   []byte
+		result  string
+		isError bool
+	}{
+		{
+			name:    "value greater than 2^64 -1",
+			input:   []byte(`{"value":"0x850a9af493d065b6c"}`),
+			result:  "153386322112866048876",
+			isError: false,
+		},
+		{
+			name:    "value less than 2^64 -1",
+			input:   []byte(`{"value":"0x746a528800"}`),
+			result:  "500000000000",
+			isError: false,
+		},
+		{
+			name:    "error case: not hex (string)",
+			input:   []byte(`{"value":"error_value"}`),
+			result:  "",
+			isError: true,
+		},
+		{
+			name:    "error case: not hex (octal)",
+			input:   []byte(`{"value":"20502515364447501455554"}`),
+			result:  "",
+			isError: true,
+		},
+	}
+
+	for _, tc := range tests {
+		t.Run(tc.name, func(t *testing.T) {
+			type req struct {
+				Value *HexNumber `json:"value"`
+			}
+
+			var v req
+
+			err := json.Unmarshal(tc.input, &v)
+			if tc.isError {
+				return
+			}
+			assert.NoError(t, err)
+
+			output := (*big.Int)(v.Value)
+			assert.Equal(t, tc.result, output.String())
+
+			bytes, err := json.Marshal(v)
+			assert.NoError(t, err)
+			assert.Equal(t, tc.input, bytes)
+		})
+	}
+}
